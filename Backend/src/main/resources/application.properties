spring.application.name=Microservice2025
server.port=8081
server.servlet.context-path=/voyage
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

spring.datasource.url=jdbc:postgresql://localhost:5432/paiementdb
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

currency.api.key=${CURRENCY_API_KEY}

spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

app.base-url=${APP_BASE_URL:http://localhost:8081/voyage}
app.frontend-url=${APP_FRONTEND_URL:http://localhost:8081/voyage}
paypal.mode=${PAYPAL_MODE:sandbox}


# Keycloak configuration for the filter
keycloak.auth-server-url=${KEYCLOAK_SERVER_URL}
keycloak.realm=${KEYCLOAK_REALM}

# IMPORTANT: Add these missing properties for your filter
keycloak.backend.client-id=${KEYCLOAK_CLIENT_ID}
keycloak.backend.client-secret=${KEYCLOAK_CLIENT_SECRET}

# Keycloak (OAuth2 Resource Server for protecting APIs)
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_SERVER_URL}/realms/${KEYCLOAK_REALM}

# Keycloak custom backend client (for registration, etc.)
keycloak.backend.realm=${KEYCLOAK_REALM}
keycloak.backend.server-url=${KEYCLOAK_SERVER_URL}
keycloak.backend.admin.username=${KEYCLOAK_ADMIN}
keycloak.backend.admin.password=${KEYCLOAK_ADMIN_PASSWORD}