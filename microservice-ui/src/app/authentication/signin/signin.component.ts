import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { KeycloakService } from '../../keycloak.service';

@Component({
  selector: 'app-signin',
  templateUrl: './signin.component.html'
})
export class SigninComponent implements OnInit {
  private loginAttempted = false;

  constructor(
    private keycloakService: KeycloakService,
    private router: Router,
    private route: ActivatedRoute
  ) {}

  async ngOnInit() {
    console.log('üîç SigninComponent - V√©rification √©tat utilisateur');

    if (this.keycloakService.isLoggedIn()) {
      const userRoles = this.keycloakService.getUserRoles();
      console.log('‚úÖ D√©j√† connect√© - r√¥les:', userRoles);

      // Redirection selon les r√¥les
    if (userRoles.includes('ROLE_ADMIN')) {
      this.router.navigate(['/admin/allgameweek']);
    } else if (userRoles.includes('ROLE_USER')) {
      this.router.navigate(['/user/user-gameweek-list']);
      } else {
        this.router.navigate(['/unauthorized']);
      }
      return;
    }

    if (this.loginAttempted) {
      console.log('‚ö†Ô∏è Connexion d√©j√† tent√©e');
      return;
    }

    this.loginAttempted = true;

    try {
      console.log('üîÑ D√©marrage de la connexion Keycloak...');
      await this.keycloakService.login(); // Le redirectUri est d√©j√† g√©r√© dans le service
    } catch (error) {
      console.error('‚ùå √âchec de connexion:', error);
      this.loginAttempted = false;
    }
  }
  login(): void {
    // Ajoute ici la logique de connexion avec Keycloak
    console.log('Login avec Keycloak');
  }
}
